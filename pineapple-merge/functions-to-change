These functions will be polymorphic,overloaded,whatever....in other words they
will change depending on whether you load a .mod,.song,or .ahx.


actions.c
----------
act_trackinc
act_trackdec
act_transpinc
act_transpdec
act_noteinc
act_notedec
act_octaveinc
act_octavedec
act_instrinc
act_instrdec
act_fxinc
act_fxdec
act_paraminc
act_paramdec
act_addline
act_delline
act_clronething
act_clritall
act_clrinsongtab
act_clrintracktab
act_clrininstrtab

gui.c
------
initsonglines
inittracks
initinstrs
readsong?
readtrack?
readinstr
drawsonged
drawtracked
drawinstred
drawgui?

modes.c
-------
_nextfreetrack
_nextfreeinstr
_insertc
_parsecmd
normalmode
cmdlinemode
insertmode
visualmode
visuallinemode

(musicchip)file.c
------------------
savefile
loadfile

chip.c
------
silence
iedplonk
startplaytrack
startplaysong
playroutine?
initchip?
interrupthandler?


also we need a struct that can hold any of the module types....
struct pineapple_tune{
	char *type; //pineapple, mod, hively

	char *filename; //ht_Name[128] ??
	u8 callbacktime; //ht_speedmultiplier,bpm, etc ht_Tempo
	char comment[1024];
	struct oscillator osc[4]; //ht_Channels || ht_Voices[MAX_CHANNELS]
	struct instrument instr[256]; //*ht_Instruments
	struct track trk[256]; //ht_Tracks[256][64]
	struct song song[256]; //*ht_Positions
	u8 trackpos;
	u8 songpos; //ht_PosNr
	int songlen;
	int instrx, instry, instroffs;
	int songx, songy, songoffs;
	int trackx, tracky, trackoffs;
	int currtrack, currinstr; //ht_TrackNr, ht_InstrumentNr, 
	int currtab;
	int saved;
};
